{"version":3,"sources":["images/logo.png","pages/index.js","App.js","index.js"],"names":["Main","useState","weight","setWeight","height","setHeight","imc","setBMI","id","Container","fixed","Grid","container","justify","alignItems","spacing","item","xs","sm","className","src","logoImg","alt","direction","Typography","variant","TextField","label","fullWidth","type","value","onChange","target","Button","color","onClick","heightm","toFixed","calculateImc","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4KAAe,MAA0B,iC,8CCkG1BA,MAtFf,WAAiB,IAAD,EACcC,mBAAS,IADvB,mBACPC,EADO,KACCC,EADD,OAEcF,mBAAS,IAFvB,mBAEPG,EAFO,KAECC,EAFD,OAGQJ,mBAAS,IAHjB,mBAGPK,EAHO,KAGFC,EAHE,KAmBd,OACE,qBAAKC,GAAG,OAAR,SACE,cAACC,EAAA,EAAD,CAAWC,OAAK,EAAhB,SACE,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAASC,WAAW,SAASC,QAAS,EAA9D,UACE,cAACJ,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,sBAAKC,UAAU,iBAAf,UACE,qBAAKC,IAAKC,EAASC,IAAI,SAEvB,0RASJ,cAACX,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,qBAAKC,UAAU,QAAf,SACE,cAACV,EAAA,EAAD,UACE,eAACE,EAAA,EAAD,CAAMC,WAAS,EAACW,UAAU,SAASR,QAAS,EAA5C,UACE,cAACS,EAAA,EAAD,CAAYC,QAAQ,KAApB,gCACA,cAACd,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,cAACU,EAAA,EAAD,CACEC,MAAM,eACNF,QAAQ,WACRG,WAAS,EACTC,KAAK,SACLC,MAAO1B,EACP2B,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgB3B,EAAU2B,EAAOF,YAG/C,cAACnB,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,cAACU,EAAA,EAAD,CACEC,MAAM,eACNF,QAAQ,WACRG,WAAS,EACTC,KAAK,SACLC,MAAO5B,EACP6B,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgB7B,EAAU6B,EAAOF,YAG/C,cAACnB,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,cAACiB,EAAA,EAAD,CACER,QAAQ,YACRS,MAAM,UACNN,WAAS,EACTO,QAAS,kBA7DR,WACnB,IAAMC,EAAUhC,EAAS,IACzBG,GAAQL,GAAUkC,EAAUA,IAAUC,QAAQ,IA2DbC,IAJjB,yBASF,cAAC3B,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,eAACQ,EAAA,EAAD,CAAYC,QAAQ,IAApB,0BACgBnB,EADhB,YA7DZA,EAAM,KAAa,cACnBA,EAAM,KAAa,gBACnBA,EAAM,KAAa,cACnBA,EAAM,KAAa,UACnBA,EAAM,GAAa,eAChB,cAyDoD,0BC5EhDiC,MANf,WACE,OACE,cAAC,EAAD,KCDJC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.bafc7cff.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.c1492408.png\";","import React, { useState } from \"react\";\nimport logoImg from \"../images/logo.png\";\nimport {\n  Container,\n  Grid,\n  Typography,\n  TextField,\n  Button,\n} from \"@material-ui/core\";\n\nimport \"./styles.css\";\n\nfunction Main() {\n  const [weight, setWeight] = useState(\"\");\n  const [height, setHeight] = useState(\"\");\n  const [imc, setBMI] = useState(\"\");\n\n  const calculateImc = () => {\n    const heightm = height / 100;\n    setBMI((weight / (heightm * heightm)).toFixed(2));\n  };\n\n  const verifyImc = () => {\n    if (imc < 18.5) return \"Underweight\";\n    if (imc < 24.9) return \"Normal Weight\";\n    if (imc < 29.9) return \"Pre-Obesity\";\n    if (imc < 39.9) return \"Obesity\";\n    if (imc > 40.0) return \"Over Obesity\";\n    return \"Not defined\";\n  };\n\n  return (\n    <div id=\"page\">\n      <Container fixed>\n        <Grid container justify=\"center\" alignItems=\"center\" spacing={5}>\n          <Grid item xs={12} sm={6}>\n            <div className=\"logo-container\">\n              <img src={logoImg} alt=\"Logo\" />\n\n              <p>\n                Body mass index is a value derived from the mass and height of a\n                person. The BMI is defined as the body mass divided by the\n                square of the body height, and is expressed in units of kg/mÂ²,\n                resulting from mass in kilograms and height in metres.\n              </p>\n            </div>\n          </Grid>\n\n          <Grid item xs={12} sm={6}>\n            <div className=\"infos\">\n              <Container>\n                <Grid container direction=\"column\" spacing={4}>\n                  <Typography variant=\"h2\">Calculate Your BMI</Typography>\n                  <Grid item>\n                    <TextField\n                      label=\"Height in cm\"\n                      variant=\"outlined\"\n                      fullWidth\n                      type=\"number\"\n                      value={height}\n                      onChange={({ target }) => setHeight(target.value)}\n                    />\n                  </Grid>\n                  <Grid item>\n                    <TextField\n                      label=\"Weight in kg\"\n                      variant=\"outlined\"\n                      fullWidth\n                      type=\"number\"\n                      value={weight}\n                      onChange={({ target }) => setWeight(target.value)}\n                    />\n                  </Grid>\n                  <Grid item>\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      fullWidth\n                      onClick={() => calculateImc()}\n                    >\n                      Calculate\n                    </Button>\n                  </Grid>\n                  <Grid item>\n                    <Typography variant=\"p\">\n                      Your BMI is: {imc} kg/m2 - {verifyImc()}{\" \"}\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Container>\n            </div>\n          </Grid>\n        </Grid>\n      </Container>\n    </div>\n  );\n}\n\nexport default Main;\n","import React from 'react';\nimport Page from './pages'\n\nfunction App() {\n  return (\n    <Page />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}